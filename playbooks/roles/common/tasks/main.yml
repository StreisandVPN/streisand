---
- name: Load OS version-specific variables for role
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "default.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Warn users if the server's Linux distribution is not Supported
  pause:
    prompt: >
      "This is not a supported version of Linux.  Please view the documentation
      for a list of supported versions; the setup will probably fail. Press
      Enter if you still want to continue."
  when:
    - not streisand_noninteractive
    - not common_supported_version
# Set default variables
- import_tasks: set-default-variables.yml

- name: Ensure the APT cache is up to date
  apt:
    update_cache: true
    cache_valid_time: 3600
  register: task_result
  until: task_result is succeeded
  retries: 30
  delay: 10

- name: Install Streisand common packages
  apt:
    package: "{{ streisand_common_packages }}"
  register: task_result
  until: task_result is succeeded
  retries: 30
  delay: 10

- name: Purge unneeded services
  apt:
    package: "{{ streisand_unneeded_packages }}"
    state: "absent"
    purge: true
    autoremove: true
  register: task_result
  until: task_result is succeeded
  retries: 30
  delay: 10

- name: Perform a full system upgrade
  apt:
    upgrade: "safe"
  register: task_result
  until: task_result is succeeded
  retries: 30
  delay: 10

- name: Copy the English BIP-0039 wordlist
  copy:
    src: english.txt
    dest: /usr/share/dict
    owner: root
    group: root
    mode: 0644

- name: Generate random VPN client names
  shell: "{{ streisand_word_gen.identifier_max_len_15 }}"
  register: "vpn_client_names"
  with_sequence: count={{ vpn_clients }}

- name: Ensure the Streisand gateway directory exists
  file:
    path: "{{ streisand_gateway_location }}"
    owner: www-data
    group: www-data
    mode: 0750
    state: directory

- name: Output the random VPN client names to disk for integration tests
  template:
    src: "test-client-inventory.j2"
    dest: "{{ streisand_gateway_location }}/test-client-inventory"
  when: streisand_client_test

- name: Copy the HTML header and footer templates that are used during documentation generation
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "header.html", dest: "{{ streisand_header_template }}" }
    - { src: "footer.html", dest: "{{ streisand_footer_template }}" }

- name: >
    Generate the unattended-upgrades templates to enable automatic security
    updates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: "20auto-upgrades.j2", dest: "/etc/apt/apt.conf.d/20auto-upgrades" }
    - {
        src: "50unattended-upgrades.j2",
        dest: "/etc/apt/apt.conf.d/50unattended-upgrades",
      }
- name: Apply the custom sysctl values
  include_role:
    name: sysctl

- name: Import SSH tasks
  import_tasks: ssh.yml
